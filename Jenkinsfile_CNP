#!groovy

@Library("Infrastructure")

String product = "div"
String component = "pfe"

List<LinkedHashMap<String, Object>> secrets = [
  secret('session-secret', 'SECRET'),
  secret('redis-secret', 'SESSION_ENCRYPTION_SECRET'),
  secret('idam-secret', 'IDAM_SECRET'),
  secret('os-places-token', 'POST_CODE_ACCESS_TOKEN'),
  secret('frontend-secret', 'MICROSERVICE_KEY')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}


withPipeline("nodejs", product, component) {
  if (env.CHANGE_TITLE) {
    if(env.CHANGE_TITLE.startsWith('[PREVIEW]')) {
      env.RUN_BASIC_TESTS = "true"
    } else {
      enableDockerBuild()
      installCharts()
      loadVaultSecrets(secrets)
      setVaultName('div')
    }
  }

  after('build') {
    sh 'yarn setup'
  }

  after('test') {
    sh 'yarn test-validation'
    // enable yarn audit and send message on master branch only
    try {
      sh 'yarn audit'
    } catch (error) {
      onMaster {
        slackSend(channel: '#div-dev', color: 'warning', message: "Yarn Audit has detected vulnerabilities in ${env.JOB_NAME}. You can check if there are patches for them in the full report, build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
      }
    }
  }

  after('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }

  before('functionalTest:preview') {
    env.FEATURE_IDAM = 'true'
    env.IDAM_API_URL = 'https://idam-api.aat.platform.hmcts.net'
    env.CASE_ORCHESTRATION_SERVICE_DRAFT_URL = 'http://div-cos-aat.service.core-compute-aat.internal/draftsapi/version/1'
    //This is to force the loading of preview.yaml instead of testing.yaml in PRs
    env.NODE_CONFIG_ENV = 'preview'
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }

  enableSlackNotifications('#div-dev')
}
