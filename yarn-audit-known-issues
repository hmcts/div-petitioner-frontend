{"type":"auditAdvisory","data":{"resolution":{"id":1005092,"path":"webpack>yargs>yargs-parser","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.2.1","paths":["webpack>yargs>yargs-parser"]}],"metadata":null,"vulnerable_versions":"<=5.0.0","module_name":"yargs-parser","severity":"moderate","github_advisory_id":"GHSA-p9pc-299p-vxgp","cves":["CVE-2020-7608"],"access":"public","patched_versions":">=5.0.1","updated":"2021-07-28T21:26:25.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-915","found_by":null,"deleted":null,"id":1005092,"references":"- https://snyk.io/vuln/SNYK-JS-YARGSPARSER-560381\n- https://www.npmjs.com/advisories/1500\n- https://github.com/yargs/yargs-parser/commit/63810ca1ae1a24b08293a4d971e70e058c7a41e2\n- https://nvd.nist.gov/vuln/detail/CVE-2020-7608\n- https://github.com/advisories/GHSA-p9pc-299p-vxgp","created":"2021-11-18T16:00:48.499Z","reported_by":null,"title":"Prototype Pollution in yargs-parser","npm_advisory_id":null,"overview":"Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.","url":"https://github.com/advisories/GHSA-p9pc-299p-vxgp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1007017,"path":"webpack>ajv","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"5.5.2","paths":["extract-text-webpack-plugin>schema-utils>ajv"]},{"version":"4.11.8","paths":["webpack>ajv"]}],"metadata":null,"vulnerable_versions":"<6.12.3","module_name":"ajv","severity":"moderate","github_advisory_id":"GHSA-v88g-cgmw-v5xw","cves":["CVE-2020-15366"],"access":"public","patched_versions":">=6.12.3","updated":"2021-05-10T21:23:42.000Z","recommendation":"Upgrade to version 6.12.3 or later","cwe":"CWE-915","found_by":null,"deleted":null,"id":1007017,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-15366\n- https://github.com/ajv-validator/ajv/commit/65b2f7d76b190ac63a0d4e9154c712d7aa37049f\n- https://github.com/ajv-validator/ajv/releases/tag/v6.12.3\n- https://hackerone.com/bugs?subject=user&report_id=894259\n- https://github.com/ajv-validator/ajv/tags\n- https://github.com/advisories/GHSA-v88g-cgmw-v5xw","created":"2022-02-11T00:00:43.707Z","reported_by":null,"title":"Prototype Pollution in Ajv","npm_advisory_id":null,"overview":"An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)","url":"https://github.com/advisories/GHSA-v88g-cgmw-v5xw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1007017,"path":"extract-text-webpack-plugin>schema-utils>ajv","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"5.5.2","paths":["extract-text-webpack-plugin>schema-utils>ajv"]},{"version":"4.11.8","paths":["webpack>ajv"]}],"metadata":null,"vulnerable_versions":"<6.12.3","module_name":"ajv","severity":"moderate","github_advisory_id":"GHSA-v88g-cgmw-v5xw","cves":["CVE-2020-15366"],"access":"public","patched_versions":">=6.12.3","updated":"2021-05-10T21:23:42.000Z","recommendation":"Upgrade to version 6.12.3 or later","cwe":"CWE-915","found_by":null,"deleted":null,"id":1007017,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-15366\n- https://github.com/ajv-validator/ajv/commit/65b2f7d76b190ac63a0d4e9154c712d7aa37049f\n- https://github.com/ajv-validator/ajv/releases/tag/v6.12.3\n- https://hackerone.com/bugs?subject=user&report_id=894259\n- https://github.com/ajv-validator/ajv/tags\n- https://github.com/advisories/GHSA-v88g-cgmw-v5xw","created":"2022-02-11T00:00:43.707Z","reported_by":null,"title":"Prototype Pollution in Ajv","npm_advisory_id":null,"overview":"An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)","url":"https://github.com/advisories/GHSA-v88g-cgmw-v5xw"}}}
